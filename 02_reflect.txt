What happens when you initialize a repository? 
	It creates a .git folder and a repository for storing your files?

Why do you need to do it?
	It creates a space to hold your versions.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area gives us the ability to package files ready to add to a new version without committing a new version.  That way we can check the package before committin.

How can you use the staging area to make sure you have one commit per logical change?
	You can use the staging area to make sure one commit per logical change by putting the contents of a logical change into the staging area and then committing at the end of each logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	Branches will help when one needs to try a change that is not ready for the main branch.  This will allow tests or specific demonstrations to be conducted.

How do the diagrams help you visualize the branch structure?
	The diagrams help me visualize the branch structure by showing the entire map at the same time.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	Merging two branches together is a way to incorporate code from different branches into the same file.  We represent it in a diagram the way we do because it shows what all of the chages are that have been incorporated.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	Automatic merging is easier and saves time but gives you less control and may introduce bugs.